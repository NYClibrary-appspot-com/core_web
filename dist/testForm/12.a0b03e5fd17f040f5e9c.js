(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"8YHF":function(r,n){r.exports='<div class = "medium-list">\n  <div class="list-viewer-wrapper">\n    <div class="list-header-title">Register</div>\n      \x3c!-- Error that will display if the entire form is not valid --\x3e\n    <div *ngIf="form.errors" class = "alert alert-danger">\n        User or Password is invalid!\n    </div>\n    \n    <form [formGroup] = "form" (ngSubmit) = "onSubmit()">\n\n      \x3c!-- Username Field --\x3e\n      <div class="form-container">\n        <mat-form-field>\n\n            \x3c!-- Associate key from ts file: username --\x3e\n            <input \n                formControlName = "username"\n                matInput\n                id="username" \n                type="email" \n                class="form-control"\n                placeholder="Hunter Email...">\n        </mat-form-field>\n        <div *ngIf="username.touched && username.invalid" \n              class="alert alert-danger">\n              <mat-error *ngIf="username.errors.required">Email is <strong>Required!</strong></mat-error>\n              <mat-error *ngIf="username.errors.email">Invalid <strong>Email!</strong></mat-error>\n        </div>\n      </div>\n      \n      \x3c!-- Password Field --\x3e\n      <div class="form-container">\n          <mat-form-field>\n  \n              \x3c!-- Associate key from ts file: username --\x3e\n              <input \n                  formControlName = "password"\n                  matInput\n                  id="password" \n                  type="text" \n                  class="form-control-password"\n                  placeholder="Password..."\n                  [type] = "hide1 ? \'password\' : \'text\' "\n                  autocomplete="off">\n                <mat-icon matSuffix (click) = "hide1 = !hide1">{{ hide1 ? \'visibility_of\' : \'visibility\' }}</mat-icon>\n          </mat-form-field>\n          <div *ngIf="password.touched && password.invalid" \n                class="alert alert-danger">\n                <mat-error *ngIf="password.errors.required">Password <strong>Required!</strong></mat-error>\n                <mat-error *ngIf="password.errors.minlength">Password must be of size {{ password.errors.minlength.requiredLength }}!</mat-error>\n          </div>\n      </div>\n\n      \x3c!-- Confirm Password Field --\x3e\n      <div class="form-container">\n          <mat-form-field>\n  \n              \x3c!-- Associate key from ts file: username --\x3e\n              <input \n                  formControlName = "password2"\n                  matInput\n                  id="password2" \n                  type="text" \n                  class="form-control-password"\n                  placeholder="Confirm Password..."\n                  [type] = "hide2 ? \'password\' : \'text\' "\n                  autocomplete="off">\n                  <mat-icon matSuffix (click) = "hide2 = !hide2">{{ hide2 ? \'visibility_of\' : \'visibility\' }}</mat-icon>\n          </mat-form-field>\n          <div *ngIf="password2.touched && password2.invalid" \n                class="alert alert-danger">\n                <mat-error *ngIf="password2.errors.required">Password <strong>Required!</strong></mat-error>\n                <mat-error *ngIf="password.errors.minlength">Password must be of size {{ password.errors.minlength.requiredLength }}!</mat-error>\n          </div>\n      </div>\n\n        <div class="form-container">\n            <button class="form-button" mat-raised-button color = "primary" type="submit" [disabled] = "!form.valid">Register</button>\n        </div>      \n\n    </form>\n        <div class="form-container">\n            <button class="form-button"  mat-raised-button color = "primary" (click) ="login()">Login</button>\n        </div> \n\n  </div>\n</div>\n\n\n\n\n\n'},pEVr:function(r,n){r.exports="\n.medium-list{\n  margin: auto;\n  width: auto;\n  padding:10px\n}\n\n.list-viewer-wrapper {\n  border: 1px solid rgba(0, 0, 0, .03);\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .24), 0 0 2px rgba(0, 0, 0, .12);\n  margin: 20px;\n}\n\n.list-header-title {\n  color: rgba(0, 0, 0, .54);\n  background: rgba(0, 0, 0, .03);\n  padding: 8px 20px;\n  font-weight: bold;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column; \n  padding: 20px;\n  \n}\n\n.form-button {\n  width: 90%;\n  margin-left: auto;\n  margin-right: auto;  \n  \n}\n\ninput.form-control-password::-webkit-outer-spin-button,\ninput.form-control-password::-webkit-inner-spin-button {\n  display: none;\n}\n\ninput.form-control-password {\n  -moz-appearance: textfield;\n}"},x5bZ:function(r,n,e){"use strict";e.r(n);var t=e("mrSG"),o=e("CcnG"),s=e("Ip0R"),i=e("oNRu"),a=e("ZYCi"),d=function(){return function(){this.username="",this.password="",this.password2=""}}(),m=e("gIcY"),u=function(){function r(r,n,e){this.userService=r,this.router=n,this.formBuilder=e,this.user=new d,this.hide1=!0,this.hide2=!0}return r.prototype.ngOnInit=function(){this.form=this.formBuilder.group({username:[this.user.username,[m.j.required,m.j.email]],password:[this.user.password,[m.j.required,m.j.minLength(6)]],password2:[this.user.password2,[m.j.required,m.j.minLength(6)]]})},r.prototype.onSubmit=function(){var r=this;this.user=Object.assign({},this.form.value),this.user.password!=this.user.password2?alert("Password did not matche!"):this.userService.registerUser(this.user.username,this.user.password).subscribe(function(n){localStorage.setItem("accessToken",n.token),n.success?r.router.navigate(["/home"]):(alert(n.error),r.router.navigate(["/register"]))})},Object.defineProperty(r.prototype,"username",{get:function(){return this.form.get("username")},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"password",{get:function(){return this.form.get("password")},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"password2",{get:function(){return this.form.get("password2")},enumerable:!0,configurable:!0}),r.prototype.login=function(){this.router.navigate(["/login"])},r=t.c([Object(o.n)({selector:"app-register",template:e("8YHF"),styles:[e("pEVr")]}),t.f("design:paramtypes",[i.a,a.b,m.a])],r)}(),l=[{path:"",component:u}],p=function(){function r(){}return r=t.c([Object(o.K)({imports:[a.c.forChild(l)],exports:[a.c]})],r)}(),c=e("UodH"),f=e("FVSy"),g=e("SMsm"),h=e("La40"),w=e("b716");e.d(n,"RegisterModule",function(){return b});var b=function(){function r(){}return r=t.c([Object(o.K)({declarations:[u],imports:[s.b,p,m.i,h.a,f.a,g.a,c.a,w.b]})],r)}()}}]);